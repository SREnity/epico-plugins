---
name: "awsinfra"
vars_data:
  region: [ "us-east-1", "us-east-2", "us-west-1", "us-west-2", "ap-south-1", "ap-southeast-1", "ap-southeast-2", "ap-northeast-1", "ap-northeast-2", "ap-northeast-3", "ca-central-1", "eu-central-1", "eu-west-1", "eu-west-2", "eu-west-3", "eu-north-1", "sa-east-1"] #, "us-gov-east-1", "us-gov-west-1" ]
vars:
  region: "{{region}}"
paging:
  location_to: "querystring" # How we pass back our page.
  indicator_from_field: "DescribeInstancesResponse.nextToken" # Field name paging info comes in.
  indicator_to_field: "NextToken" # Field name paging info is passed back in.
  indicator_from_structure: "param" # response/iterator/etc ???necessary???
plugin: "FULL_PATH_TO/epico-plugins/plugins/aws/aws.so"
endpoints:
  - name: "connectionCheck"
    vars:
      xml_tags: "item"
      service: "ec2"
    paging:
      location_to: "querystring"
      indicator_from_field: "DescribeInstancesResponse.nextToken"
      indicator_to_field: "NextToken"
      indicator_from_structure: "param"
    endpoint: "https://{{service}}.{{region}}.amazonaws.com/"
    use_for_connection_check: true
    skip_for_scans: true
    current_base_key: [ "DescribeInstancesResponse.requestId" ]
    desired_base_key: [ "Reservations" ]
    current_error_key: [ "Response.Errors.Error.Message" ]
    desired_error_key: [ "Errors" ]
    documentation: "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_Instance.html"
    params:
      querystring:
        Action: [ "DescribeInstances" ] # All flow lists iterated sequentially.
        Version: [ "2016-11-15" ]
        MaxResults: [ 1000 ]
        NextToken: [ ]
      header:
      body:
  - name: "ec2_instances"
    vars:
      xml_tags: "item"
      service: "ec2"
    return: false
    paging:
      location_to: "querystring"
      indicator_from_field: "DescribeInstancesResponse.nextToken"
      indicator_to_field: "NextToken"
      indicator_from_structure: "param"
    endpoint: "https://{{service}}.{{region}}.amazonaws.com/"
    current_base_key: ["DescribeInstancesResponse.reservationSet"]
    desired_base_key: ["Reservations"]
    current_error_key: ["Response.Errors.Error"]
    desired_error_key: ["Errors.{{service}}.instances"]
    documentation: "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_Instance.html"
    params:
      querystring:
        Action: [ "DescribeInstances" ] # All flow lists iterated sequentially.
        Version: [ "2016-11-15" ]
        MaxResults: [ 1000 ]
        NextToken: []
      header:
      body:
    endpoints:
      DescribeInstancesResponse.reservationSet.instancesSet.instanceId:
        - name: "cloudwatch_cpu"
          vars:
            xml_tags: "member"
            service: "monitoring"
            metric: "CPUUtilization"
          endpoint: "https://{{service}}.{{region}}.amazonaws.com/"
          current_base_key: ["GetMetricStatisticsResponse.GetMetricStatisticsResult.Datapoints"]
          desired_base_key: ["{{metric}}.{{endpoint_key}}"]
          current_error_key: ["ErrorResponse.Error"]
          desired_error_key: ["Errors.{{service}}"]
          documentation: "https://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_GetMetricStatistics.html"
          params:
            querystring:
              Action: [ "GetMetricStatistics" ] # Flow lists iterated sequentially.
              Version: [ "2010-08-01" ]
              Dimensions.member.1.Name: [ "InstanceId" ]
              Dimensions.member.1.Value: [ "{{endpoint_key}}" ] #"i-0ee35c7bf164f7ae8" ]
              Period: [ "86400" ]
              Namespace: [ "AWS/EC2" ]
              Statistics.member.1: [ "Average" ]
              Statistics.member.2: [ "Sum" ]
              Statistics.member.3: [ "Minimum" ]
              Statistics.member.4: [ "Maximum" ]
              MetricName: [ "{{metric}}" ]
              Unit: [ "Percent" ]
            header:
            body:
        - name: "cloudwatch_network_out"
          vars:
            xml_tags: "member"
            service: "monitoring"
            metric: "NetworkOut"
          endpoint: "https://{{service}}.{{region}}.amazonaws.com/"
          current_base_key: ["GetMetricStatisticsResponse.GetMetricStatisticsResult.Datapoints"]
          desired_base_key: ["{{metric}}.{{endpoint_key}}"]
          current_error_key: ["ErrorResponse.Error"]
          desired_error_key: ["Errors.{{service}}"]
          documentation: "https://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_GetMetricStatistics.html"
          params:
            querystring:
              Action: [ "GetMetricStatistics" ] # Flow lists iterated sequentially.
              Version: [ "2010-08-01" ]
              Dimensions.member.1.Name: [ "InstanceId" ]
              Dimensions.member.1.Value: [ "{{endpoint_key}}" ] #"i-0ee35c7bf164f7ae8" ]
              Period: [ "86400" ]
              Namespace: [ "AWS/EC2" ]
              Statistics.member.1: [ "Average" ]
              Statistics.member.2: [ "Sum" ]
              Statistics.member.3: [ "Minimum" ]
              Statistics.member.4: [ "Maximum" ]
              MetricName: [ "{{metric}}" ]
              Unit: [ "Bytes" ]
            header:
            body:
        - name: "cloudwatch_network_in"
          vars:
            xml_tags: "member"
            service: "monitoring"
            metric: "NetworkIn"
          endpoint: "https://{{service}}.{{region}}.amazonaws.com/"
          current_base_key: ["GetMetricStatisticsResponse.GetMetricStatisticsResult.Datapoints"]
          desired_base_key: ["{{metric}}.{{endpoint_key}}"]
          current_error_key: ["ErrorResponse.Error"]
          desired_error_key: ["Errors.{{service}}"]
          documentation: "https://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_GetMetricStatistics.html"
          params:
            querystring:
              Action: [ "GetMetricStatistics" ] # Flow lists iterated sequentially.
              Version: [ "2010-08-01" ]
              Dimensions.member.1.Name: [ "InstanceId" ]
              Dimensions.member.1.Value: [ "{{endpoint_key}}" ] #"i-0ee35c7bf164f7ae8" ]
              Period: [ "86400" ]
              Namespace: [ "AWS/EC2" ]
              Statistics.member.1: [ "Average" ]
              Statistics.member.2: [ "Sum" ]
              Statistics.member.3: [ "Minimum" ]
              Statistics.member.4: [ "Maximum" ]
              MetricName: [ "{{metric}}" ]
              Unit: [ "Bytes" ]
            header:
            body:
        - name: "cloudwatch_disk_write"
          vars:
            xml_tags: "member"
            service: "monitoring"
            metric: "DiskWriteBytes"
          endpoint: "https://{{service}}.{{region}}.amazonaws.com/"
          current_base_key: ["GetMetricStatisticsResponse.GetMetricStatisticsResult.Datapoints"]
          desired_base_key: ["{{metric}}.{{endpoint_key}}"]
          current_error_key: ["ErrorResponse.Error"]
          desired_error_key: ["Errors.{{service}}"]
          documentation: "https://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_GetMetricStatistics.html"
          params:
            querystring:
              Action: [ "GetMetricStatistics" ] # Flow lists iterated sequentially.
              Version: [ "2010-08-01" ]
              Dimensions.member.1.Name: [ "InstanceId" ]
              Dimensions.member.1.Value: [ "{{endpoint_key}}" ] #"i-0ee35c7bf164f7ae8" ]
              Period: [ "86400" ]
              Namespace: [ "AWS/EC2" ]
              Statistics.member.1: [ "Average" ]
              Statistics.member.2: [ "Sum" ]
              Statistics.member.3: [ "Minimum" ]
              Statistics.member.4: [ "Maximum" ]
              MetricName: [ "{{metric}}" ]
              Unit: [ "Bytes" ]
            header:
            body:
        - name: "cloudwatch_disk_read"
          vars:
            xml_tags: "member"
            service: "monitoring"
            metric: "DiskReadBytes"
          endpoint: "https://{{service}}.{{region}}.amazonaws.com/"
          current_base_key: ["GetMetricStatisticsResponse.GetMetricStatisticsResult.Datapoints"]
          desired_base_key: ["{{metric}}.{{endpoint_key}}"]
          current_error_key: ["ErrorResponse.Error"]
          desired_error_key: ["Errors.{{service}}"]
          documentation: "https://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_GetMetricStatistics.html"
          params:
            querystring:
              Action: [ "GetMetricStatistics" ] # Flow lists iterated sequentially.
              Version: [ "2010-08-01" ]
              Dimensions.member.1.Name: [ "InstanceId" ]
              Dimensions.member.1.Value: [ "{{endpoint_key}}" ] #"i-0ee35c7bf164f7ae8" ]
              Period: [ "86400" ]
              Namespace: [ "AWS/EC2" ]
              Statistics.member.1: [ "Average" ]
              Statistics.member.2: [ "Sum" ]
              Statistics.member.3: [ "Minimum" ]
              Statistics.member.4: [ "Maximum" ]
              MetricName: [ "{{metric}}" ]
              Unit: [ "Bytes" ]
            header:
            body:
  - name: "ec2_volumes"
    vars:
      xml_tags: "item"
      service: "ec2"
    return: false
    paging:
      location_to: "querystring"
      indicator_from_field: "DescribeVolumesResponse.nextToken"
      indicator_to_field: "NextToken"
      indicator_from_structure: "param"
    endpoint: "https://{{service}}.{{region}}.amazonaws.com/"
    current_base_key: ["DescribeVolumesResponse.volumeSet"]
    desired_base_key: ["Volumes"]
    current_error_key: ["Response.Errors.Error"]
    desired_error_key: ["Errors.{{service}}.volumes"]
    documentation: "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeVolumes.html"
    params:
      querystring:
        Action: [ "DescribeVolumes" ] # All flow lists iterated sequentially.
        Version: [ "2016-11-15" ]
        MaxResults: [ 1000 ]
        NextToken: []
      header:
      body:
    endpoints:
      DescribeVolumesResponse.volumeSet.volumeId:
        - name: "cloudwatch_idletime"
          vars:
            xml_tags: "member"
            service: "monitoring"
            metric: "VolumeIdleTime"
          endpoint: "https://{{service}}.{{region}}.amazonaws.com/"
          current_base_key: ["GetMetricStatisticsResponse.GetMetricStatisticsResult.Datapoints"]
          desired_base_key: ["{{metric}}.{{endpoint_key}}"]
          current_error_key: ["ErrorResponse.Error"]
          desired_error_key: ["Errors.{{service}}"]
          documentation: "https://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_GetMetricStatistics.html"
          params:
            querystring:
              Action: [ "GetMetricStatistics" ] # Flow lists iterated sequentially.
              Version: [ "2010-08-01" ]
              Dimensions.member.1.Name: [ "VolumeId" ]
              Dimensions.member.1.Value: [ "{{endpoint_key}}" ] #"vol-1234567890abcdef0" ]
              Period: [ "86400" ]
              Namespace: [ "AWS/EBS" ]
              Statistics.member.1: [ "Average" ]
              Statistics.member.2: [ "Sum" ]
              Statistics.member.3: [ "Minimum" ]
              Statistics.member.4: [ "Maximum" ]
              MetricName: [ "{{metric}}" ]
              Unit: [ "Seconds" ]
            header:
            body:
        - name: "cloudwatch_burst_balance"
          vars:
            xml_tags: "member"
            service: "monitoring"
            metric: "BurstBalance"
          endpoint: "https://{{service}}.{{region}}.amazonaws.com/"
          current_base_key: ["GetMetricStatisticsResponse.GetMetricStatisticsResult.Datapoints"]
          desired_base_key: ["{{metric}}.{{endpoint_key}}"]
          current_error_key: ["ErrorResponse.Error"]
          desired_error_key: ["Errors.{{service}}"]
          documentation: "https://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_GetMetricStatistics.html"
          params:
            querystring:
              Action: [ "GetMetricStatistics" ] # Flow lists iterated sequentially.
              Version: [ "2010-08-01" ]
              Dimensions.member.1.Name: [ "VolumeId" ]
              Dimensions.member.1.Value: [ "{{endpoint_key}}" ] #"vol-1234567890abcdef0"" ]
              Period: [ "86400" ]
              Namespace: [ "AWS/EBS" ]
              Statistics.member.1: [ "Average" ]
              Statistics.member.2: [ "Minimum" ]
              Statistics.member.3: [ "Maximum" ]
              MetricName: [ "{{metric}}" ]
              Unit: [ "Percent" ]
            header:
            body:
  - name: "efs"
    vars:
      xml_tags: "item"
      service: "elasticfilesystem"
    return: false
    paging:
      location_to: "querystring"
      indicator_from_field: "NextMarker"
      indicator_to_field: "Marker"
      indicator_from_structure: "param"
    endpoint: "https://{{service}}.{{region}}.amazonaws.com/"
    current_base_key: ["FileSystems"]
    desired_base_key: ["FileSystems"]
    current_error_key: ["Response.Errors.Error"]
    desired_error_key: ["Errors.{{service}}.volumes"]
    documentation: "https://docs.aws.amazon.com/efs/latest/ug/API_DescribeFileSystems.html"
    params:
      querystring:
        Action: [ "DescribeFileSystems" ] # All flow lists iterated sequentially.
        Version: [ "2015-02-01" ]
        MaxResults: [ 1000 ]
        NextToken: []
      header:
      body:
    endpoints:
      FileSystems.FileSystemId:
        - name: "cloudwatch_idletime"
          vars:
            xml_tags: "member"
            service: "monitoring"
            metric: "TotalIOBytes"
          endpoint: "https://{{service}}.{{region}}.amazonaws.com/"
          current_base_key: ["GetMetricStatisticsResponse.GetMetricStatisticsResult.Datapoints"]
          desired_base_key: ["{{metric}}.{{endpoint_key}}"]
          current_error_key: ["ErrorResponse.Error"]
          desired_error_key: ["Errors.{{service}}"]
          documentation: "https://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_GetMetricStatistics.html"
          params:
            querystring:
              Action: [ "GetMetricStatistics" ] # Flow lists iterated sequentially.
              Version: [ "2010-08-01" ]
              Dimensions.member.1.Name: [ "FileSystemId" ]
              Dimensions.member.1.Value: [ "{{endpoint_key}}" ] #"fs-01234567" ]
              Period: [ "86400" ]
              Namespace: [ "AWS/EFS" ]
              Statistics.member.1: [ "Average" ]
              Statistics.member.2: [ "Minimum" ]
              Statistics.member.3: [ "Maximum" ]
              MetricName: [ "{{metric}}" ]
              Unit: [ "Bytes" ]
            header:
            body:
  - name: "elb"
    vars:
      xml_tags: "member"
      service: "elasticloadbalancing"
    return: false
    paging:
      location_to: "querystring"
      indicator_from_field: "NextMarker"
      indicator_to_field: "Marker"
      indicator_from_structure: "param"
    endpoint: "https://{{service}}.{{region}}.amazonaws.com/"
    current_base_key: ["DescribeLoadBalancersResponse.DescribeLoadBalancersResult.LoadBalancers"]
    desired_base_key: ["LoadBalancers"]
    current_error_key: ["Response.Errors.Error"]
    desired_error_key: ["Errors.{{service}}.volumes"]
    documentation: "https://docs.aws.amazon.com/elasticloadbalancing/latest/APIReference/API_DescribeLoadBalancers.html"
    params:
      querystring:
        Action: [ "DescribeLoadBalancers" ] # All flow lists iterated sequentially.
        Version: [ "2015-02-01" ]
        MaxResults: [ 1000 ]
        NextToken: []
      header:
      body:
    endpoints:
      DescribeLoadBalancersResponse.DescribeLoadBalancersResult.LoadBalancers.LoadBalancerArn:
        - name: "cloudwatch_unhealthy_host_count"
          vars:
            xml_tags: "member"
            service: "monitoring"
            metric: "UnHealthyHostCount"
          endpoint: "https://{{service}}.{{region}}.amazonaws.com/"
          current_base_key: ["GetMetricStatisticsResponse.GetMetricStatisticsResult.Datapoints"]
          desired_base_key: ["{{metric}}.{{endpoint_key}}"]
          current_error_key: ["ErrorResponse.Error"]
          desired_error_key: ["Errors.{{service}}"]
          documentation: "https://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_GetMetricStatistics.html"
          params:
            querystring:
              Action: [ "GetMetricStatistics" ] # Flow lists iterated sequentially.
              Version: [ "2010-08-01" ]
              Dimensions.member.1.Name: [ "LoadBalancer" ]
              # TODO: This endpoint does not work correctly, because the value should be only the final part of the ARN, that comes after :loadbalancer, i.e. app/my-load-balancer/50dc6c495c0c9188
              Dimensions.member.1.Value: [ "{{endpoint_key}}" ] #"arn:aws:elasticloadbalancing:us-west-2:123456789012:loadbalancer/app/my-load-balancer/50dc6c495c0c9188" ]
              Period: [ "86400" ]
              Namespace: [ "AWS/NetworkELB" ]
              Statistics.member.1: [ "Average" ]
              MetricName: [ "{{metric}}" ]
              Unit: [ "Count" ]
            header:
            body:
  - name: "s3"
    vars:
      xml_tags: "Bucket"
      service: "s3"
    return: false
    paging:
      location_to: "querystring"
      indicator_from_field: ""
      indicator_to_field: ""
      indicator_from_structure: ""
    endpoint: "https://{{service}}.{{region}}.amazonaws.com/"
    current_base_key: ["ListBucketsOutput.Buckets"]
    desired_base_key: ["Buckets"]
    current_error_key: ["Response.Errors.Error"]
    desired_error_key: ["Errors.{{service}}.volumes"]
    documentation: "https://docs.aws.amazon.com/AmazonS3/latest/API/API_ListBuckets.html#API_ListBuckets_RequestParameters"
    params:
      querystring:
        Action: [ "ListBuckets" ] # All flow lists iterated sequentially.
        Version: [ "2015-02-01" ]
        MaxResults: [ 1000 ]
      header:
      body:
    endpoints:
      ListBucketsOutput.Buckets.Name:
        - name: "cloudwatch_number_of_objects"
          vars:
            xml_tags: "member"
            service: "monitoring"
            metric: "NumberOfObjects"
          endpoint: "https://{{service}}.{{region}}.amazonaws.com/"
          current_base_key: ["GetMetricStatisticsResponse.GetMetricStatisticsResult.Datapoints"]
          desired_base_key: ["{{metric}}.{{endpoint_key}}"]
          current_error_key: ["ErrorResponse.Error"]
          desired_error_key: ["Errors.{{service}}"]
          documentation: "https://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_GetMetricStatistics.html"
          params:
            querystring:
              Action: [ "GetMetricStatistics" ] # Flow lists iterated sequentially.
              Version: [ "2010-08-01" ]
              Dimensions.member.1.Name: [ "BucketName" ]
              Dimensions.member.1.Value: [ "{{endpoint_key}}" ] #"MyBucket" ]
              Period: [ "86400" ]
              Namespace: [ "AWS/S3" ]
              Statistics.member.1: [ "Average" ]
              MetricName: [ "{{metric}}" ]
              Unit: [ "Count" ]
            header:
            body:
        - name: "cloudwatch_bucket_size"
          vars:
            xml_tags: "member"
            service: "monitoring"
            metric: "BucketSize"
          endpoint: "https://{{service}}.{{region}}.amazonaws.com/"
          current_base_key: ["GetMetricStatisticsResponse.GetMetricStatisticsResult.Datapoints"]
          desired_base_key: ["{{metric}}.{{endpoint_key}}"]
          current_error_key: ["ErrorResponse.Error"]
          desired_error_key: ["Errors.{{service}}"]
          documentation: "https://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_GetMetricStatistics.html"
          params:
            querystring:
              Action: [ "GetMetricStatistics" ] # Flow lists iterated sequentially.
              Version: [ "2010-08-01" ]
              Dimensions.member.1.Name: [ "BucketName" ]
              Dimensions.member.1.Value: [ "{{endpoint_key}}" ] #"MyBucket" ]
              Period: [ "86400" ]
              Namespace: [ "AWS/S3" ]
              Statistics.member.1: [ "Average" ]
              MetricName: [ "{{metric}}" ]
              Unit: [ "Bytes" ]
            header:
            body:
        - name: "cloudwatch_number_of_requests"
          vars:
            xml_tags: "member"
            service: "monitoring"
            metric: "AllRequests"
          endpoint: "https://{{service}}.{{region}}.amazonaws.com/"
          current_base_key: ["GetMetricStatisticsResponse.GetMetricStatisticsResult.Datapoints"]
          desired_base_key: ["{{metric}}.{{endpoint_key}}"]
          current_error_key: ["ErrorResponse.Error"]
          desired_error_key: ["Errors.{{service}}"]
          documentation: "https://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_GetMetricStatistics.html"
          params:
            querystring:
              Action: [ "GetMetricStatistics" ] # Flow lists iterated sequentially.
              Version: [ "2010-08-01" ]
              Dimensions.member.1.Name: [ "BucketName" ]
              Dimensions.member.1.Value: [ "{{endpoint_key}}" ] #"MyBucket" ]
              Period: [ "86400" ]
              Namespace: [ "AWS/S3" ]
              Statistics.member.1: [ "Sum" ]
              MetricName: [ "{{metric}}" ]
              Unit: [ "Count" ]
            header:
            body:
  - name: "rds"
    vars:
      xml_tags: "DBInstance"
      service: "rds"
    return: false
    paging:
      location_to: "querystring"
      indicator_from_field: "NextMarker"
      indicator_to_field: "Marker"
      indicator_from_structure: "param"
    endpoint: "https://{{service}}.{{region}}.amazonaws.com/"
    current_base_key: ["DescribeDBInstancesResponse.DescribeDBInstancesResult.DBInstances"]
    desired_base_key: ["DBInstances"]
    current_error_key: ["Response.Errors.Error"]
    desired_error_key: ["Errors.{{service}}.volumes"]
    documentation: "https://docs.aws.amazon.com/AmazonRDS/latest/APIReference/API_DescribeDBInstances.html"
    params:
      querystring:
        Action: [ "DescribeDBInstances" ] # All flow lists iterated sequentially.
        Version: [ "2014-10-01" ]
        MaxResults: [ 1000 ]
      header:
      body:
    endpoints:
      DescribeDBInstancesResponse.DescribeDBInstancesResult.DBInstanceIdentifier:
        - name: "cloudwatch_cpu"
          vars:
            xml_tags: "member"
            service: "monitoring"
            metric: "CPUUtilization"
          endpoint: "https://{{service}}.{{region}}.amazonaws.com/"
          current_base_key: ["GetMetricStatisticsResponse.GetMetricStatisticsResult.Datapoints"]
          desired_base_key: ["{{metric}}.{{endpoint_key}}"]
          current_error_key: ["ErrorResponse.Error"]
          desired_error_key: ["Errors.{{service}}"]
          documentation: "https://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_GetMetricStatistics.html"
          params:
            querystring:
              Action: [ "GetMetricStatistics" ] # Flow lists iterated sequentially.
              Version: [ "2010-08-01" ]
              Dimensions.member.1.Name: [ "DBInstanceIdentifier" ]
              Dimensions.member.1.Value: [ "{{endpoint_key}}" ] #"mysqldb" ]
              Period: [ "86400" ]
              Namespace: [ "AWS/RDS" ]
              Statistics.member.1: [ "Average" ]
              Statistics.member.2: [ "Sum" ]
              Statistics.member.3: [ "Minimum" ]
              Statistics.member.4: [ "Maximum" ]
              MetricName: [ "{{metric}}" ]
              Unit: [ "Percent" ]
            header:
            body:
        - name: "cloudwatch_connections"
          vars:
            xml_tags: "member"
            service: "monitoring"
            metric: "DatabaseConnections"
          endpoint: "https://{{service}}.{{region}}.amazonaws.com/"
          current_base_key: ["GetMetricStatisticsResponse.GetMetricStatisticsResult.Datapoints"]
          desired_base_key: ["{{metric}}.{{endpoint_key}}"]
          current_error_key: ["ErrorResponse.Error"]
          desired_error_key: ["Errors.{{service}}"]
          documentation: "https://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_GetMetricStatistics.html"
          params:
            querystring:
              Action: [ "GetMetricStatistics" ] # Flow lists iterated sequentially.
              Version: [ "2010-08-01" ]
              Dimensions.member.1.Name: [ "DBInstanceIdentifier" ]
              Dimensions.member.1.Value: [ "{{endpoint_key}}" ] #"mysqldb" ]
              Period: [ "86400" ]
              Namespace: [ "AWS/RDS" ]
              Statistics.member.1: [ "Average" ]
              MetricName: [ "{{metric}}" ]
              Unit: [ "Count" ]
            header:
            body:
        - name: "cloudwatch_free_storage"
          vars:
            xml_tags: "member"
            service: "monitoring"
            metric: "FreeStorageSpace"
          endpoint: "https://{{service}}.{{region}}.amazonaws.com/"
          current_base_key: ["GetMetricStatisticsResponse.GetMetricStatisticsResult.Datapoints"]
          desired_base_key: ["{{metric}}.{{endpoint_key}}"]
          current_error_key: ["ErrorResponse.Error"]
          desired_error_key: ["Errors.{{service}}"]
          documentation: "https://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_GetMetricStatistics.html"
          params:
            querystring:
              Action: [ "GetMetricStatistics" ] # Flow lists iterated sequentially.
              Version: [ "2010-08-01" ]
              Dimensions.member.1.Name: [ "DBInstanceIdentifier" ]
              Dimensions.member.1.Value: [ "{{endpoint_key}}" ] #"mysqldb" ]
              Period: [ "86400" ]
              Namespace: [ "AWS/RDS" ]
              Statistics.member.1: [ "Average" ]
              MetricName: [ "{{metric}}" ]
              Unit: [ "Bytes" ]
            header:
            body:
        - name: "cloudwatch_swap_usage"
          vars:
            xml_tags: "member"
            service: "monitoring"
            metric: "SwapUsage"
          endpoint: "https://{{service}}.{{region}}.amazonaws.com/"
          current_base_key: ["GetMetricStatisticsResponse.GetMetricStatisticsResult.Datapoints"]
          desired_base_key: ["{{metric}}.{{endpoint_key}}"]
          current_error_key: ["ErrorResponse.Error"]
          desired_error_key: ["Errors.{{service}}"]
          documentation: "https://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_GetMetricStatistics.html"
          params:
            querystring:
              Action: [ "GetMetricStatistics" ] # Flow lists iterated sequentially.
              Version: [ "2010-08-01" ]
              Dimensions.member.1.Name: [ "DBInstanceIdentifier" ]
              Dimensions.member.1.Value: [ "{{endpoint_key}}" ] #"mysqldb" ]
              Period: [ "86400" ]
              Namespace: [ "AWS/RDS" ]
              Statistics.member.1: [ "Average" ]
              MetricName: [ "{{metric}}" ]
              Unit: [ "Bytes" ]
            header:
            body:
